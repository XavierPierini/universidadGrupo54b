/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadGrupo54b.entidades.Vistas.formularios;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import universidadGrupo54b.AccesoADatos.*;
import universidadGrupo54b.entidades.*;

/**
 *
 * @author Otras
 */
public class CargaDeNotas extends javax.swing.JInternalFrame {

    private List<Alumno> listaA;
    private List<Materia> listaM;
    private List<Inscripcion> insc;

    private InscripcionData inscData;
    private MateriaData matData;
    private AlumnoData aluData;

    private DefaultTableModel modelo;

    /**
     * Creates new form FormularioDeInscripcionView
     */
    public CargaDeNotas() {
        initComponents();

        aluData = new AlumnoData();
        listaA = aluData.listarAlumnos();
        modelo = new DefaultTableModel();
        inscData = new InscripcionData();
        matData = new MateriaData();

        cargaAlumnos();
        armarCabeceraTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBoxAlumno = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTTable = new javax.swing.JTable();
        jBGuardar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jRestado = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Carga de Notas:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 80, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccionar un Alumno:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 128, -1, -1));

        jCBoxAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxAlumnoActionPerformed(evt);
            }
        });
        jCBoxAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCBoxAlumnoKeyReleased(evt);
            }
        });
        getContentPane().add(jCBoxAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 129, 232, -1));

        jTTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTTable.setCellSelectionEnabled(true);
        jTTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 209, 510, 100));

        jBGuardar.setBackground(new java.awt.Color(102, 102, 102));
        jBGuardar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jBGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 319, 108, -1));

        jBSalir.setBackground(new java.awt.Color(102, 102, 102));
        jBSalir.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jBSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 319, 126, -1));

        jRestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRestadoActionPerformed(evt);
            }
        });
        getContentPane().add(jRestado, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 173, -1, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("MOSTRAR DATOS DEL ALUMNO INSCRIPTO:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 173, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FooterUlpVirtualM7.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 80));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/55.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 580, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
                                              
                   InscripcionData inscData = new InscripcionData(); 
                  // inscData.actualizarNota(14, 14, 7.65 );
    int filaSeleccionada = jTTable.getSelectedRow(); // Obtener la fila seleccionada

    try {
        if (filaSeleccionada != -1) {
            Alumno a = (Alumno) jCBoxAlumno.getSelectedItem();
            System.out.println(a.getIdAlumno());
            int idMateria = (Integer) modelo.getValueAt(filaSeleccionada, 0);
            System.out.println(idMateria);
            String nombre = (String) modelo.getValueAt(filaSeleccionada, 1);
            double nota = Double.parseDouble(modelo.getValueAt(filaSeleccionada, 2).toString()); // Convertir a Double
            System.out.println(nota);
            int notaEntera = (int) Math.round(nota); // Redondear a un número entero

           inscData.actualizarNota(a.getIdAlumno(), idMateria, nota);
            System.out.println(notaEntera);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una nota válida.");
    }




    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jCBoxAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxAlumnoActionPerformed
    }//GEN-LAST:event_jCBoxAlumnoActionPerformed

    private void jCBoxAlumnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCBoxAlumnoKeyReleased
//        // TODO add your handling code here:
//        List<Inscripcion> list=inscData.obtenerInscripciones();
//        


    }//GEN-LAST:event_jCBoxAlumnoKeyReleased

    private void jRestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRestadoActionPerformed
        // TODO add your handling code here:
        borrarFilasTabla();
        jRestado.setSelected(true);
        cargarDatosMateriasInscriptas();
        jBGuardar.setEnabled(true);


    }//GEN-LAST:event_jRestadoActionPerformed

    private void jTTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTTableMouseClicked
//        // TODO add your handling code here:
//        double nota;
//        int filaSeleccionada=jTTable.getSelectedRow();
//        if(filaSeleccionada!=-1){
//        nota = Double.parseDouble(jTTable.getValueAt(filaSeleccionada,  2));
//////        }
    }//GEN-LAST:event_jTTableMouseClicked

    private void cargaAlumnos() {//carga alumnos al combo box

        for (Alumno item : listaA) {
            jCBoxAlumno.addItem(item);
        }
    }

    private void armarCabeceraTabla() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("Codigo");
        filaCabecera.add("Nombre");
        filaCabecera.add("Nota");
        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jTTable.setModel(modelo);

    }

    private void borrarFilasTabla() {
        int indice = modelo.getRowCount() - 1;

        for (int i = indice; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

//
    private void cargarDatosMateriasInscriptas() {
        Inscripcion insc = new Inscripcion();
        //borrarFilasTabla();
        Alumno selec = (Alumno) jCBoxAlumno.getSelectedItem();
        List<Inscripcion> lista = (ArrayList) inscData.unirMateriaYNota(selec);
       
        for (Inscripcion matData : lista) {
            modelo.addRow(new Object[]{matData.getMateria().getIdMateria(), matData.getMateria().getNombre(), matData.getNota()});
        }

//    for(Materia matData: lista){
//            modelo.addRow(new Object[] { matData.getIdMateria(),  matData.getNombre(), insc.getNota()});
    }

//    private void cargarDatosInscripciones() {
//        //borrarFilasTabla();
//        Alumno selec = (Alumno) jCBoxAlumno.getSelectedItem();
//        List<Materia> lista = (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdAlumno());
//
//        for (Materia ins : lista) {
//            modelo.addRow(new Object[]{ins.getNombre(), ins.getIdMateria(), ins.insc.getNombre(), insc.getNota()});
//        }
//    }
//    private void cargarMateriasInscriptas() {
//        //borrarFilasTabla();
//        Inscripcion selec = (Inscripcion) jCBoxAlumno.getSelectedItem();
//        List<Materia> lista = (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdInscripto());
//        for (Materia matData : lista) {
//            modelo.addRow(new Object[]{matData.getIdMateria(), matData.getNombre(), matData.getAnioMateria()});
//        }
//    }
//    private void cargarDatosMateriasInscriptas(){
//    //borrarFilasTabla();
//    Alumno selec = (Alumno) jCBoxAlumno.getSelectedItem();
//    List <Materia> lista = (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdAlumno());
//    for(Materia matData: lista){
//            modelo.addRow(new Object[] { matData.getIdMateria(), matData.getNombre()});
//            for(Inscripcion insc: list){
//    modelo.addRow(new Object[]{insc.getNota()});
//    }
//    
//    }
//    }
//
//        private void cargarNotas() {
//        borrarFilasTabla();
//        Alumno selec = (Alumno) jCBoxAlumno.getSelectedItem();
//
//        List<Materia> listaM = (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdAlumno());
//        for (Inscripcion in : list) {
//            modelo.addRow(new Object[]{in.getMateria().getIdMateria(), in.getMateria().getNombre(), in.getNota()});
//        }
//    }
////  private void cargarDatosMateriasInscriptas(){
////    //borrarFilasTabla();
////    Alumno selec = (Alumno) jCBoxAlumno.getSelectedItem();
////     List<Inscripcion> lista= (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdAlumno());
////        for (Inscripcion inscData : lista) {
////            modelo.addRow(new Object[]{inscData.getMateria().getIdMateria(), inscData.getMateria().getNombre(), inscData.getNota()});
////        }
////    }
////  
//  
//
//    private void cargarDatosInscripciones() {
//        //borrarFilasTabla();
//        Alumno selec = (Alumno) jCBoxAlumno.getSelectedItem();
//        List<Materia> lista = (ArrayList) inscData.obtenerMateriasCursadas(selec.getIdAlumno());
//        for (Inscripcion in : listaI) {
//            modelo.addRow(new Object[]{in.getMateria().getIdMateria(), in.getMateria().getNombre(), in.getNota()});
//        }
//    }
//

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Alumno> jCBoxAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRestado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTTable;
    // End of variables declaration//GEN-END:variables

}
